{"name": "test_right_way", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"9f6bdffca2ca239c421e09ffe9b28dcb\")>\n\n    def test_right_way(browser):\n        \"\"\"\n        Test case TC-4\n        \"\"\"\n        browser.get(URL)\n        browser.execute_script(\"window.scrollTo(0, document.body.scrollHeight);\")\n    \n        WebDriverWait(browser, timeout=10, poll_frequency=2).until(EC.text_to_be_present_in_element(\n            (By.CLASS_NAME, \"current-post\"), \"17\"))\n    \n        product = browser.find_element(by=By.CSS_SELECTOR, value=\"[data-product_sku='4XAVRC35']\")\n        product.click()\n    \n        WebDriverWait(browser, timeout=10, poll_frequency=2).until(\n            EC.visibility_of_element_located((By.ID, \"cart-modal\")))\n    \n        cart_is_visible = browser.find_element(\n            By.XPATH, value=\"//div[@id='cart-modal']\").value_of_css_property(\"display\")\n        assert cart_is_visible == \"block\", \"Unexpected state of cart\"\n    \n        browser.find_element(by=By.CSS_SELECTOR, value=\"a.button.checkout\").click()\n>       WebDriverWait(browser, timeout=10, poll_frequency=1).until(\n            EC.url_to_be(\"https://test.qa.studio/?page_id=10\"))\n\ntests/test_shop.py:89: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"9f6bdffca2ca239c421e09ffe9b28dcb\")>\nmethod = <function url_to_be.<locals>._predicate at 0x10d07d1c0>, message = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException"}, "description": "\n    Test case TC-4\n    ", "start": 1671725534052, "stop": 1671725550079, "uuid": "30a6b310-027d-4c20-acf5-cb66ff95c291", "historyId": "832350b147fac251f172289a626c5cba", "testCaseId": "7b8323124234f69a8fde1e3de50f452e", "fullName": "tests.test_shop#test_right_way", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_shop"}, {"name": "host", "value": "MacBook-Air-Sona.local"}, {"name": "thread", "value": "18652-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_shop"}]}